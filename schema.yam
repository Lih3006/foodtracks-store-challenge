openapi: 3.0.3
info:
  title: Foodtracks store challenge
  version: 1.0.0
  description: The Store Management API is an application built on Django, designed
    to streamline basic store management operations. The API provides straightforward
    functionalities, allowing users to perform operations with stores such as creating,
    viewing, updating, and deleting information about specific stores.
paths:
  /api/accounts/:
    get:
      operationId: accounts_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAccountList'
          description: ''
    post:
      operationId: accounts_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Account'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
  /api/accounts/{id}/:
    get:
      operationId: accounts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
    put:
      operationId: accounts_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Account'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
    patch:
      operationId: accounts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAccount'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
    delete:
      operationId: accounts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/branches/:
    get:
      operationId: branches_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - branches
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBranchList'
          description: ''
    post:
      operationId: branches_create
      tags:
      - branches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Branch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Branch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Branch'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
  /api/branches/{id}/:
    get:
      operationId: branches_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - branches
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
    put:
      operationId: branches_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - branches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Branch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Branch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Branch'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
    patch:
      operationId: branches_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - branches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBranch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBranch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBranch'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
    delete:
      operationId: branches_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - branches
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/companies/:
    get:
      operationId: companies_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - companies
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCompanyList'
          description: ''
    post:
      operationId: companies_create
      tags:
      - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Company'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Company'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
  /api/companies/{id}/:
    get:
      operationId: companies_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - companies
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    put:
      operationId: companies_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Company'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Company'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    patch:
      operationId: companies_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCompany'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCompany'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCompany'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    delete:
      operationId: companies_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - companies
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/login/:
    post:
      operationId: login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/operating_hours/:
    get:
      operationId: operating_hours_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - operating_hours
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOperatingList'
          description: ''
    post:
      operationId: operating_hours_create
      tags:
      - operating_hours
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Operating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Operating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Operating'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operating'
          description: ''
  /api/operating_hours/{branchId}:
    get:
      operationId: operating_hours_retrieve
      parameters:
      - in: path
        name: branchId
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - operating_hours
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operating'
          description: ''
    put:
      operationId: operating_hours_update
      parameters:
      - in: path
        name: branchId
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - operating_hours
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Operating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Operating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Operating'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operating'
          description: ''
    patch:
      operationId: operating_hours_partial_update
      parameters:
      - in: path
        name: branchId
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - operating_hours
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOperating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOperating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOperating'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operating'
          description: ''
    delete:
      operationId: operating_hours_destroy
      parameters:
      - in: path
        name: branchId
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - operating_hours
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
          maxLength: 128
        email:
          type: string
          format: email
          maxLength: 254
        is_superuser:
          type: boolean
          default: false
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        phone:
          type: string
          maxLength: 14
        role:
          $ref: '#/components/schemas/RoleEnum'
        branches:
          type: array
          items:
            $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - branches
      - email
      - id
      - password
      - phone
      - role
      - username
    Branch:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        store_name:
          type: string
          maxLength: 60
        zip_code:
          type: string
          maxLength: 5
        state:
          type: string
          maxLength: 30
        city:
          type: string
          maxLength: 50
        street:
          type: string
          maxLength: 50
        number:
          type: integer
        email:
          type: string
          format: email
          maxLength: 150
        phone:
          type: string
          maxLength: 15
        company:
          type: string
          format: uuid
          readOnly: true
        operating_hours:
          type: array
          items:
            $ref: '#/components/schemas/Operating'
      required:
      - city
      - company
      - email
      - id
      - number
      - operating_hours
      - phone
      - state
      - store_name
      - street
      - zip_code
    Company:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        company_name:
          type: string
          maxLength: 60
      required:
      - company_name
      - id
    Nested:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        store_name:
          type: string
          maxLength: 60
        zip_code:
          type: string
          maxLength: 5
        state:
          type: string
          maxLength: 30
        city:
          type: string
          maxLength: 50
        street:
          type: string
          maxLength: 50
        number:
          type: integer
        email:
          type: string
          format: email
          maxLength: 150
        phone:
          type: string
          maxLength: 15
        company:
          type: string
          format: uuid
        operating_hours:
          type: array
          items:
            type: string
            format: uuid
      required:
      - city
      - company
      - email
      - id
      - number
      - operating_hours
      - phone
      - state
      - store_name
      - street
      - zip_code
    Operating:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        open_hour:
          type: string
          format: time
        close_hour:
          type: string
          format: time
        monday:
          type: boolean
        tuesday:
          type: boolean
        wednesday:
          type: boolean
        thursday:
          type: boolean
        friday:
          type: boolean
        saturday:
          type: boolean
        sunday:
          type: boolean
      required:
      - close_hour
      - id
      - open_hour
    PaginatedAccountList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Account'
    PaginatedBranchList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Branch'
    PaginatedCompanyList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Company'
    PaginatedOperatingList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Operating'
    PatchedAccount:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
          maxLength: 128
        email:
          type: string
          format: email
          maxLength: 254
        is_superuser:
          type: boolean
          default: false
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        phone:
          type: string
          maxLength: 14
        role:
          $ref: '#/components/schemas/RoleEnum'
        branches:
          type: array
          items:
            $ref: '#/components/schemas/Nested'
          readOnly: true
    PatchedBranch:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        store_name:
          type: string
          maxLength: 60
        zip_code:
          type: string
          maxLength: 5
        state:
          type: string
          maxLength: 30
        city:
          type: string
          maxLength: 50
        street:
          type: string
          maxLength: 50
        number:
          type: integer
        email:
          type: string
          format: email
          maxLength: 150
        phone:
          type: string
          maxLength: 15
        company:
          type: string
          format: uuid
          readOnly: true
        operating_hours:
          type: array
          items:
            $ref: '#/components/schemas/Operating'
    PatchedCompany:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        company_name:
          type: string
          maxLength: 60
    PatchedOperating:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        open_hour:
          type: string
          format: time
        close_hour:
          type: string
          format: time
        monday:
          type: boolean
        tuesday:
          type: boolean
        wednesday:
          type: boolean
        thursday:
          type: boolean
        friday:
          type: boolean
        saturday:
          type: boolean
        sunday:
          type: boolean
    RoleEnum:
      enum:
      - owner
      - regional_manager
      - site_manager
      - site_employer
      type: string
      description: |-
        * `owner` - owner
        * `regional_manager` - regional_manager
        * `site_manager` - site_manager
        * `site_employer` - site_employer
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
